<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="au.com.zhinanzhen.tb.dao.SubjectPriceDAO">
	<resultMap id="BaseResultMap"
		type="au.com.zhinanzhen.tb.dao.pojo.SubjectPriceDO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="subject_id" property="subjectId" jdbcType="INTEGER" />
		<result column="start_num" property="startNum" jdbcType="INTEGER" />
		<result column="end_num" property="endNum" jdbcType="INTEGER" />
		<result column="region_ids" property="regionIds" jdbcType="VARCHAR" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_subject_price_interval
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="au.com.zhinanzhen.tb.dao.pojo.SubjectPriceDO">
		<selectKey resultType="java.lang.Integer" keyProperty="id"
			order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into tb_subject_price_interval (id, gmt_create, gmt_modify, subject_id, start_num,
		end_num, region_ids)
		values (#{id,jdbcType=INTEGER}, now(), now(), #{subjectId,jdbcType=INTEGER},
		#{startNum,jdbcType=INTEGER},
		#{endNum,jdbcType=INTEGER}, #{regionIds,jdbcType=VARCHAR})
	</insert>
	<update id="updateByPrimaryKey" parameterType="au.com.zhinanzhen.tb.dao.pojo.SubjectPriceDO">
		update tb_subject_price_interval
		set subject_id = #{subjectId,jdbcType=INTEGER},
		start_num = #{startNum,jdbcType=INTEGER},
		end_num = #{endNum,jdbcType=INTEGER},
		region_ids = #{regionIds,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, subject_id, start_num, end_num, region_ids
		from tb_subject_price_interval
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, subject_id, start_num, end_num, region_ids
		from tb_subject_price_interval
	</select>
	<select id="selectBySubjectId" resultMap="BaseResultMap">
		select id, subject_id, start_num, end_num, region_ids
		from tb_subject_price_interval
		where subject_id = #{subjectId}
		<if test="regionId != 0">
			AND (region_ids LIKE '%${regionId}:%')
		</if>
	</select>
</mapper>