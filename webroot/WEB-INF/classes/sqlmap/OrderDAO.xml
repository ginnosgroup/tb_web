<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="au.com.zhinanzhen.tb.dao.OrderDAO">
	<resultMap id="BaseResultMap" type="au.com.zhinanzhen.tb.dao.pojo.OrderDO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="subject_id" property="subjectId" jdbcType="INTEGER" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="INTEGER" />
		<result column="pay_type" property="payType" jdbcType="VARCHAR" />
		<result column="pay_code" property="payCode" jdbcType="VARCHAR" />
		<result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
		<result column="create_price" property="createPrice" jdbcType="DECIMAL" />
		<result column="finish_price" property="finishPrice" jdbcType="DECIMAL" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="introducer_user_id" property="introducerUserId"
			jdbcType="INTEGER" />
		<result column="adviser_id" property="adviserId" jdbcType="INTEGER" />
		<result column="adviser_date" property="adviserDate"/>
		<result column="region_id" property="regionId" jdbcType="INTEGER" />
		<result column="gmt_create" property="createDate" />
		<result column="remain_pay_amount" property="remainPayAmount" jdbcType="DECIMAL" />
		<result column="remain_pay_date" property="remainPayDate" />
		<result column="remain_pay_balance" property="remainPayBalance" jdbcType="DECIMAL" />
	</resultMap>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tb_order
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="au.com.zhinanzhen.tb.dao.pojo.OrderDO"
		useGeneratedKeys="true " keyProperty="id">
		insert into tb_order (id,
		gmt_create,gmt_modify,
		name, state,
		subject_id, num, amount,
		pay_type,pay_code,
		pay_amount,
		pay_date,
		create_price,
		finish_price,
		user_id,
		introducer_user_id,
		adviser_id,
		adviser_date,
		region_id)
		values
		(#{id,jdbcType=INTEGER}, now(),
		now(),
		#{name,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR},
		#{subjectId,jdbcType=INTEGER},
		#{num,jdbcType=INTEGER},
		#{amount,jdbcType=DECIMAL},
		#{payType,jdbcType=VARCHAR},
		#{payCode,jdbcType=VARCHAR},
		#{payAmount,jdbcType=DECIMAL},
		#{payDate,jdbcType=TIMESTAMP},
		#{createPrice,jdbcType=DECIMAL},
		#{finishPrice,jdbcType=DECIMAL},
		#{userId,jdbcType=INTEGER},
		#{introducerUserId,jdbcType=INTEGER},
		#{adviserId,jdbcType=INTEGER},
		now(),
		#{regionId,jdbcType=INTEGER})
	</insert>
	<update id="updateByPrimaryKey" parameterType="au.com.zhinanzhen.tb.dao.pojo.OrderDO">
		update tb_order
		set name = #{name,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		subject_id = #{subjectId,jdbcType=INTEGER},
		num = #{num,jdbcType=INTEGER},
		amount =  #{amount},
		pay_type = #{payType,jdbcType=VARCHAR},
		pay_code = #{payCode,jdbcType=VARCHAR},
		pay_amount = #{payAmount,jdbcType=DECIMAL},
		pay_date = #{payDate,jdbcType=TIMESTAMP},
		create_price
		=#{createPrice,jdbcType=DECIMAL},
		finish_price
		=#{finishPrice,jdbcType=DECIMAL},
		user_id = #{userId,jdbcType=INTEGER},
		introducer_user_id = #{introducerUserId,jdbcType=INTEGER},
		adviser_id =
		#{adviserId,jdbcType=INTEGER},
		adviser_date = #{adviserDate},
		region_id = #{regionId}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select id, name, state, subject_id, num, amount,pay_type,
		pay_code,
		pay_amount,
		pay_date,
		create_price,
		finish_price,
		user_id,
		introducer_user_id,
		adviser_id,gmt_create,
		adviser_date,region_id,
		remain_pay_amount,
		remain_pay_date,
		remain_pay_balance
		from
		tb_order
		where id =
		#{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, name, state,
		subject_id, num, amount, pay_type, pay_code, pay_amount,
		pay_date,create_price,finish_price,
		user_id,
		introducer_user_id,
		adviser_id,gmt_create,adviser_date,region_id,
		remain_pay_amount,
		remain_pay_date,
		remain_pay_balance
		from tb_order
	</select>
	<select id="selectBySubjectId" resultMap="BaseResultMap">
		select id, name, state,
		subject_id, num, amount, pay_type, pay_code, pay_amount,pay_date,create_price,
		finish_price,user_id,
		introducer_user_id,
		adviser_id,gmt_create,
		adviser_date,region_id,
		remain_pay_amount,
		remain_pay_date,
		remain_pay_balance
		from
		tb_order
		where subject_id =
		#{subject_id}
		and pay_type != 'OTHER'
		and
		state != 'NEW'
		ORDER BY gmt_create DESC
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap">
		select id, name, state,
		subject_id, num, amount, pay_type, pay_code,
		pay_amount,pay_date,create_price,
		finish_price,
		user_id,
		introducer_user_id,
		adviser_id,gmt_create,
		adviser_date,region_id,
		remain_pay_amount,
		remain_pay_date,
		remain_pay_balance
		from
		tb_order
		where
		user_id = #{userId}
		<if test="state == 'NEW'">
			AND (state = 'NEW')
		</if>
		<if test="state == 'WAIT'">
			AND (state = 'WAIT')
		</if>
		<if test="state == 'SUCCESS'">
			AND (state = 'SUCCESS')
		</if>
		<if test="state == 'END'">
			AND (state = 'END')
		</if>
		order by gmt_create desc
	</select>
	<select id="selectByIntroducerId" resultMap="BaseResultMap">
		select id, name, state,
		subject_id, num, amount , pay_type, pay_code,
		pay_amount,pay_date,create_price,
		finish_price,
		user_id,
		introducer_user_id,
		adviser_id,gmt_create,
		adviser_date,region_id,
		remain_pay_amount,
		remain_pay_date,
		remain_pay_balance
		from
		tb_order
		where
		introducer_user_id = #{introducerId}
		AND state != 'NEW'
		AND pay_type != 'OTHER'
		order by gmt_create desc
	</select>
</mapper>